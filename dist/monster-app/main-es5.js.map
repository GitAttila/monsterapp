{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/components/header/header.component.html","./src/app/components/user-list/user-list.component.html","./src/app/components/user/user.component.html","./src/app/angular-material.module.ts","./src/app/app.component.scss","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/header/header.component.scss","./src/app/components/header/header.component.ts","./src/app/components/user-list/user-list.component.scss","./src/app/components/user-list/user-list.component.ts","./src/app/components/user/user.component.scss","./src/app/components/user/user.component.ts","./src/app/data/users.data.ts","./src/app/routing/app-routing.module.ts","./src/app/routing/auth-guard.service.ts","./src/app/routing/auth.service.ts","./src/app/services/data.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<app-header></app-header>\\n<main>\\n  <div class=\\\"container\\\">\\n      <router-outlet></router-outlet>\\n  </div>\\n</main>\\n\\n\"","module.exports = \"<mat-toolbar color=\\\"primary\\\" class=\\\"app-header mat-elevation-z6\\\">\\n  <div class=\\\"container\\\">\\n      <span class=\\\"app-header__link mat-h1\\\" routerLink = \\\"/\\\">{{appName}}</span>\\n  </div>\\n</mat-toolbar>\\n<mat-toolbar class=\\\"app-header__subheader\\\">\\n  <div class=\\\"container\\\">\\n      <button\\n        *ngIf = \\\"returnToMainPage === true\\\"\\n        mat-icon-button\\n        routerLink=\\\"/\\\">\\n        <mat-icon>arrow_back</mat-icon>\\n      </button>\\n      <span class=\\\"mat-h3\\\">{{appSectionName}}</span>\\n  </div>\\n</mat-toolbar>\\n\"","module.exports = \"<div class=\\\"user-component\\\">\\n    <mat-form-field class = \\\"formfield-wrapper formfield-wrapper__filter\\\">\\n      <input\\n        matInput (keyup)=\\\"applyFilter($event.target.value)\\\"\\n        placeholder=\\\"filter\\\"\\n        color = \\\"accent\\\">\\n    </mat-form-field>\\n\\n    <table mat-table [dataSource]=\\\"usersData\\\" matSort class=\\\"mat-elevation-z2\\\">\\n\\n      <ng-container matColumnDef=\\\"id\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"firstname\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> first name </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.firstname}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"lastname\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> last name </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.lastname}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"email\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> email </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.email}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"edit\\\">\\n        <th mat-header-cell *matHeaderCellDef></th>\\n        <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"user-component__align-right\\\">\\n          <button\\n            mat-icon-button\\n            [routerLink]=\\\"['/edit', element.id]\\\">\\n            <mat-icon>edit</mat-icon>\\n          </button>\\n        </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n    </table>\\n    <button\\n      mat-fab\\n      class=\\\"btn-adduser\\\"\\n      color=\\\"accent\\\"\\n      routerLink=\\\"/newuser\\\">\\n      <mat-icon>add</mat-icon>\\n    </button>\\n\\n</div>\\n\"","module.exports = \"<div class=\\\"container user-component\\\">\\n  <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\n  <div *ngIf=\\\"!isLoading\\\">\\n    <mat-card\\n      class=\\\"app-card\\\">\\n        <form [formGroup]=\\\"userForm\\\" (submit)=\\\"onSaveUser()\\\">\\n\\n          <mat-card-header>\\n            <div mat-card-avatar class=\\\"app-card__header-image\\\">\\n              <span\\n                [innerHtml]= \\\"generateAvatar('initials')\\\"\\n                class=\\\"app-card__avatar-text\\\"></span>\\n            </div>\\n            <mat-card-title>\\n              <span [innerHtml]= \\\"generateAvatar()\\\"></span>\\n            </mat-card-title>\\n            <mat-card-subtitle [innerHtml]= \\\"userForm.get('nickname').value\\\"></mat-card-subtitle>\\n          </mat-card-header>\\n\\n          <mat-card-content>\\n            <mat-form-field class=\\\"formfield-wrapper__50\\\">\\n                <input\\n                  matInput\\n                  type = \\\"text\\\"\\n                  formControlName = \\\"firstname\\\"\\n                  placeholder = \\\"first name*\\\">\\n                  <mat-error *ngIf=\\\"userForm.get('firstname').getError('required') \\\">Please enter user's first name.</mat-error>\\n                  <mat-error *ngIf=\\\"userForm.get('firstname').getError('minlength') \\\">This field requires minimum of 3 characters.</mat-error>\\n            </mat-form-field>\\n            <mat-form-field class=\\\"formfield-wrapper__50 formfield-wrapper__lastinrow\\\">\\n                <input\\n                matInput\\n                type = \\\"text\\\"\\n                formControlName = \\\"lastname\\\"\\n                placeholder = \\\"last name*\\\">\\n                <mat-error *ngIf=\\\"userForm.get('lastname').invalid\\\">Please enter user's last name.</mat-error>\\n            </mat-form-field>\\n            <mat-form-field class=\\\"formfield-wrapper\\\">\\n                <input\\n                matInput\\n                type = \\\"text\\\"\\n                formControlName = \\\"nickname\\\"\\n                placeholder = \\\"nick name\\\">\\n            </mat-form-field>\\n            <mat-form-field class=\\\"formfield-wrapper\\\">\\n                <textarea\\n                matInput\\n                rows=\\\"4\\\"\\n                formControlName = \\\"description\\\"\\n                placeholder = \\\"description\\\"></textarea>\\n            </mat-form-field>\\n            <mat-form-field class=\\\"formfield-wrapper__50\\\">\\n                <input\\n                matInput\\n                type = \\\"email\\\"\\n                formControlName = \\\"email\\\"\\n                placeholder = \\\"email*\\\">\\n                <mat-error *ngIf=\\\"userForm.get('email').getError('required') \\\">This field is required.</mat-error>\\n                <mat-error *ngIf=\\\"userForm.get('email').getError('email') \\\">Please enter a valid email.</mat-error>\\n            </mat-form-field>\\n            <mat-form-field class=\\\"formfield-wrapper__50 formfield-wrapper__lastinrow\\\">\\n                <input\\n                matInput\\n                type = \\\"text\\\"\\n                formControlName = \\\"phone\\\"\\n                placeholder = \\\"phone\\\">\\n            </mat-form-field>\\n            <mat-card-subtitle class=\\\"app-card__note\\\">Fields marked with * are required.</mat-card-subtitle>\\n          </mat-card-content>\\n\\n          <mat-card-actions>\\n            <button\\n              mat-raised-button\\n              color = \\\"accent\\\">SAVE</button>\\n          </mat-card-actions>\\n\\n        </form>\\n      </mat-card>\\n    </div>\\n</div>\\n\\n\"","import { NgModule } from '@angular/core';\nimport {\n  MatToolbarModule,\n  MatButtonModule,\n  MatTableModule,\n  MatSortModule,\n  MatIconModule,\n  MatCardModule,\n  MatInputModule,\n  MatProgressSpinnerModule\n} from '@angular/material';\n\n@NgModule({\n  imports: [\n    MatToolbarModule,\n    MatButtonModule,\n    MatTableModule,\n    MatSortModule,\n    MatIconModule,\n    MatCardModule,\n    MatProgressSpinnerModule,\n    MatInputModule\n  ],\n  exports: [\n    MatToolbarModule,\n    MatButtonModule,\n    MatTableModule,\n    MatSortModule,\n    MatIconModule,\n    MatCardModule,\n    MatProgressSpinnerModule,\n    MatInputModule\n  ]\n})\nexport class AngularMaterialModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent {\n  appName = 'Monster App';\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { AngularMaterialModule } from './angular-material.module';\nimport { AppRoutingModule } from './routing/app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { UserComponent } from './components/user/user.component';\nimport { UserListComponent } from './components/user-list/user-list.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AuthGuardService } from './routing/auth-guard.service';\nimport { AuthService } from './routing/auth.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    UserComponent,\n    UserListComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AngularMaterialModule\n  ],\n  providers: [\n    AuthGuardService,\n    AuthService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, ViewEncapsulation, OnInit, OnDestroy } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n  private destroyed$: Subject<void> = new Subject();\n  public returnToMainPage = false;\n  appName = 'MonsterApp';\n  appSectionName = 'Users';\n\n  constructor(public router: Router) {}\n\n  ngOnInit() {\n    this.router.events\n      .pipe(\n        filter((event) => event instanceof NavigationEnd),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe((navEnd: NavigationEnd) => {\n        if (navEnd.url.search('edit') > -1) {\n          this.appSectionName = 'Edit user';\n          this.returnToMainPage = true;\n        } else if (navEnd.url.search('newuser') > -1) {\n          this.appSectionName = 'Add new user';\n          this.returnToMainPage = true;\n        } else  {\n          this.appSectionName = 'Users';\n          this.returnToMainPage = false;\n        }\n      }\n      );\n  }\n\n  ngOnDestroy() {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXNlci1saXN0L3VzZXItbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { DataService } from '../../services/data.service';\nimport { Iuser } from 'src/app/models/user.model';\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class UserListComponent implements OnInit {\n  displayedColumns: string[] = ['id', 'firstname', 'lastname', 'email', 'edit'];\n  public usersData;\n\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n\n  constructor(public dataSvc: DataService) {}\n\n  applyFilter(filterValue: string) {\n    this.usersData.filter = filterValue.trim().toLowerCase();\n  }\n\n  ngOnInit() {\n    this.usersData = new MatTableDataSource<Iuser>(this.dataSvc.getUsersData());\n    this.usersData.sort = this.sort;\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXNlci91c2VyLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, ViewEncapsulation, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { DataService } from 'src/app/services/data.service';\nimport { Iuser } from '../../models/user.model';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class UserComponent implements OnInit, OnDestroy {\n  private paramSub: Subscription;\n  userForm: FormGroup;\n  isLoading = false;\n  public mode = 'add';\n  private userId: string;\n\n  constructor(\n    public dataSvc: DataService,\n    public router: Router,\n    public route: ActivatedRoute) {}\n\n  generateAvatar(type: string) {\n    type = type || 'fullname';\n    let res = '';\n    let space = ' ';\n    let fn = (this.userForm.get('firstname').value || '');\n    let ln = (this.userForm.get('lastname').value || '');\n    if (type === 'initials') {\n      fn = fn.charAt(0).toUpperCase();\n      ln = ln.charAt(0).toUpperCase();\n      space = '';\n    }\n    (fn === '' && ln === '') ? res = '...' : res = fn + space + ln;\n    return res;\n  }\n\n  onSaveUser() {\n    if (this.userForm.invalid) {\n      console.log(this.userForm);\n      return;\n    }\n    const newUser: Iuser = {\n      id: this.dataSvc.getUsersData().length + 1,\n      firstname: this.userForm.get('firstname').value || '',\n      lastname: this.userForm.get('lastname').value || '',\n      nickname: this.userForm.get('nickname').value || '',\n      description: this.userForm.get('description').value || '',\n      avatarpath: '',\n      phone: this.userForm.get('phone').value || '',\n      email: this.userForm.get('email').value || ''\n    };\n    if (this.mode === 'add') {\n      this.dataSvc.addUser(newUser);\n    } else if (this.mode === 'edit') {\n      this.dataSvc.editUser(parseInt(this.userId, 10), newUser);\n    }\n  }\n\n  ngOnInit() {\n    this.userForm = new FormGroup({\n      firstname: new FormControl(null, {\n        validators: [\n          Validators.required,\n          Validators.minLength(3)\n        ]\n      }),\n      lastname: new FormControl(null, {\n        validators: [Validators.required]\n      }),\n      nickname: new FormControl(null, {}),\n      description: new FormControl(null, {}),\n      email: new FormControl(null, {\n        validators: [\n          Validators.required,\n          Validators.email\n        ]\n      }),\n      phone: new FormControl(null, {})\n    });\n    console.log(this.userForm.get('firstname').errors );\n    this.paramSub = this.route.paramMap\n      .subscribe((paramMap: ParamMap) => {\n        if (paramMap.has('userId')) {\n          this.mode = 'edit';\n          this.userId = paramMap.get('userId');\n          const user = this.dataSvc.getUserDataById(parseInt(this.userId, 10));\n          this.userForm.setValue({\n            firstname: user.firstname,\n            lastname: user.lastname,\n            nickname: user.nickname,\n            description: user.description,\n            phone: user.phone,\n            email: user.email\n          });\n        } else {\n          this.mode = 'add';\n          this.userId = null;\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this.paramSub.unsubscribe();\n  }\n\n}\n","import { Iuser } from '../models/user.model';\n\nexport const APP_USERS_DATA: Iuser[] = [\n  {\n    id: 1,\n    firstname: 'Bellamy',\n    lastname: 'Blake',\n    nickname: 'Bel',\n    description:\n      'It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout.',\n    avatarpath: '',\n    phone: '+420-723429511',\n    email: 'bblake@earthsurvival.com'\n  },\n  {\n    id: 2,\n    firstname: 'Octavia',\n    lastname: 'Blake',\n    nickname: 'O',\n    description:\n      'The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters.',\n    avatarpath: '',\n    phone: '+420-653299525',\n    email: 'oblake@earthsurvival.com'\n  },\n  {\n    id: 3,\n    firstname: 'Clarke',\n    lastname: 'Griffin',\n    nickname: '',\n    description:\n      'Various versions have evolved over the years, sometimes by accident, sometimes on purpose.',\n    avatarpath: '',\n    phone: '+420-123456789',\n    email: 'clarke.griffin@earthsurvival.com'\n  },\n  {\n    id: 4,\n    firstname: 'Raven',\n    lastname: 'Reyes',\n    nickname: 'raven',\n    description:\n      'All the Lorem Ipsum generators on the Internet tend to repeat predefined chunks as necessary.',\n    avatarpath: '',\n    phone: '+420-729488119',\n    email: 'ravrey@earthsurvival.com'\n  }\n];\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserListComponent } from '../components/user-list/user-list.component';\nimport { UserComponent } from '../components/user/user.component';\nimport { AuthGuardService } from './auth-guard.service';\n\nconst routes: Routes = [\n  { path: '', component: UserListComponent },\n  { path: 'newuser', component: UserComponent },\n  { path: 'edit/:userId', canActivate: [AuthGuardService], component: UserComponent },\n  { path: '**', pathMatch: 'full', redirectTo: ''}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, Router, ParamMap } from '@angular/router';\nimport { AuthService } from './auth.service';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n  constructor(\n    public authSvc: AuthService,\n    public router: Router) { }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    return this.authSvc.isEnabled(route.params)\n      .then(\n        (isEnabled: boolean) => {\n          if (isEnabled) {\n            return true;\n          } else {\n            this.router.navigate(['/']);\n          }\n        }\n      );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { DataService } from 'src/app/services/data.service';\nimport { ParamMap, Params } from '@angular/router';\n\n@Injectable()\nexport class AuthService {\n  constructor(public dataSvc: DataService) {}\n\n  isEnabled(params: Params) {\n    return new Promise(\n      (resolve, reject) => {\n        const numOfUsers = this.dataSvc.getUsersData().length;\n        if (params.userId !== undefined) {\n          if ((params.userId) - 1 >= 0 && (params.userId - 1) <= numOfUsers) {\n            resolve(true);\n          } else {\n            resolve(false);\n          }\n        }\n      });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { APP_USERS_DATA } from '../data/users.data';\nimport { Iuser } from '../models/user.model';\nimport { Router } from '@angular/router';\n\n@Injectable({ providedIn: 'root'})\nexport class DataService {\n  private userData: Iuser[] = APP_USERS_DATA;\n\n  constructor(\n    public router: Router\n  ) {}\n\n  getUsersData(): Iuser[] {\n    if (this.userData !== undefined) {\n      return this.userData;\n    }\n    return [];\n  }\n\n  getUserDataById(id: number): Iuser {\n    if (this.userData[id - 1] !== undefined) {\n      return this.userData[id - 1];\n    }\n    return;\n  }\n\n  addUser(user: Iuser) {\n    this.userData.push(user);\n    this.router.navigate(['/']);\n  }\n\n  editUser(userId: number, newUserData: Iuser) {\n    const foundUser: Iuser = this.userData[userId - 1];\n    foundUser.firstname = newUserData.firstname;\n    foundUser.lastname = newUserData.lastname;\n    foundUser.nickname = newUserData.nickname;\n    foundUser.description = newUserData.description;\n    foundUser.email = newUserData.email;\n    foundUser.phone = newUserData.phone;\n    this.router.navigate(['/']);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}